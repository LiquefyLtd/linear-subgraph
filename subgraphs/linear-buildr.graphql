
type Transfer @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  timestamp: BigInt!
  block: BigInt!
  source: String!
}

type Minted @entity {
  id: ID!
  account: Bytes! # address
  value: BigInt!
  source: String!
  timestamp: BigInt!
  gasPrice: BigInt!
  block: BigInt!
}

type DebtSnapshot @entity {
  id: ID!
  # last block where an event happened
  block: BigInt!
  timestamp: BigInt!
  account: Bytes! # address
  balanceOf: BigInt # early on it was possible this wouldn't have a value (pre v2)
  # the following will be null before multicurrency (v2) release
  collateral: BigInt
  debtBalanceOf: BigInt
}

type Burned @entity {
  id: ID!
  account: Bytes! # address
  value: BigInt! # uint256
  source: String!
  timestamp: BigInt!
  gasPrice: BigInt!
  block: BigInt!
}

type FeesClaimed @entity {
  id: ID!
  account: Bytes! # address
  rewardslusd: BigInt! # uint256
  rewardsLina: BigInt! # uint256
  block: BigInt!
  timestamp: BigInt!
}

type Collateral @entity {
  id: ID!
  account: Bytes! # address
  currency: String!
  value: BigInt!
  timestamp: BigInt!
  gasPrice: BigInt!
  block: BigInt!
}

type RedeemCollateral @entity {
  id: ID!
  account: Bytes! # address
  currency: String!
  value: BigInt!
  timestamp: BigInt!
  gasPrice: BigInt!
  block: BigInt!
}